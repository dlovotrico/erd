<?php/** * <h1>Modelo controlador de errores</h1> * - Receives errors from all the modules, controllers, etc and *   collect them and report the error if needed.  * - The behavior may changed depending the configured security  *   level. *  *  * <h2>Codes</h2> *      - <strong>Series 1000</strong> - <em>Not available/allowed resources</em> *              - <em>1001</em>: The requested controller doesn't exist.  *                               This error doesn't require terminating the app *                               and just proceeds to take the user to the *                               frontpage. *              - <em>1002</em>: Incomplete theme, a file is missing. *                               <strong>severe error</b> the program is terminated *                               and a message is displayed. * *  * ---- *  *   * @author       Diego Lovotrico <diego@nucleoid.net> * * @since        0.1 * @version      0.1 *  *  * @todo Instead of the modules reporting the error messages the error messages *       should be stored in a message file, and then that file requested by *       thus model if there's an error. This would also help with translation *       and localization of the system. */class Error {    private static $_singleton;    private static $_reportedErrors = array();    private function __construct() {        // - Reported errors array initialization.        // - These errors are stored.         self::$_reportedErrors[1001] = array();        self::$_reportedErrors[1002] = array();    } // __construct()    // --------> [SINGLETON]    public static function getInstance() {        if(is_null (self::$_singleton)) {            self::$_singleton = new Error();        }        return self::$_singleton;    } // getInstance()    // ----------------------------------------------------------------------    // ----------------------------------------------------> [PUBLIC METHODS]    // ----------------------------------------------------------------------    /**     * <h3>Reports an error to the system itself</h3>     *      * @since        Version 0.1     *      * @param int $errorCode tipo de error reportado.      */    public static function addError($series,$info = TRUE) {         array_push(self::$_reportedErrors[$series], $info);    }    public static function getError() {        return self::$_reportedErrors;    }}